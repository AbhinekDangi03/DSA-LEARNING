trees: 
  hierichical data structure

  SOME NAME:
      1. Root Node: from where the entire tree is started.
      2. Parent Node
      3. Child Node: child of the parent node. 
      4. leaf node: node with no childern.
      5. Sibling Node: chidren of the same parent node. 
      6. Ancestors: all nodes before the node you are pointing at.
      7. Sub Tree: sub tree.

  TYPES OF BINARY TREES:
      1.Full Binary Tree = either node have 0 or 2 children but not 1.
      2.Complete Binary Tree = all levels are completly filled except the last level
                             = the last level has all the node towards as left as possible.
      3. Perfect Binary Tree = All the leaf node are at the same level.
      4. Balanced Binary Tree = Height of the tree at max should be log2(n), n = number of nodes.
      5. Degenerate Tree = Every parent have a single children. 

  TRAVERSAL IN TREE: 
      TWO MAIN TECHNIQUES: 1. BFS = BREADTH FIRST SEARCH TECH.
                           2. DFS = DEPT FIRST SEARCH TECH.

                1. BFS = 
                          1. Print every element that is present in the same level of tree. It show the element per level.
                                                               (10)
                                                              /    \
                                                            (5)    (15)
                                                            / \    /  \ 
                                                        (25) (20) (35) (30)
                                                              ->Traversal Path: 10, 5, 15, 25, 20, 35, 30;

                2. DFS = 
                          1. INORDER TRAVERSAL TECH. : LOGIC= (left -> root -> right) go to the extreme left print value then print the root's value then print the right's value;
                                                     :-->          (10)
                                                                  /    \
                                                                 (5)    (15)

                                                                Traversal path: 

                                                                1. Go left  → (5)
                                                                2. Visit    → [5]
                                                                3. Back up  → (10)
                                                                4. Visit    → [10]
                                                                5. Go right → (15)
                                                                6. Visit    → [15]

                          2. PRE-ORDER TRAVERSAL TECH.: LOGIC = (root -> left -> right) go to the extreme left sub tree and from there apply the logic.
                                                      :        (10)
                                                              /    \
                                                            (5)    (15)
                                                            / \    /  \ 
                                                        (25) (20) (35) (30)

                                                        Traversal path: 

                                                        1. Go to the noot node-> 10
                                                        2. apply logic = 10, left node(5)->left->right == 10, 5, 25, 20.
                                                        3. apply loic to right = 15, 35, 30

                                                        therefore: it will display somethingl like: 10,5,25,20,15, 35,30;

                          3. POST-ORDER TRAVERSAL TECH.: LOGIC = (left -> right -> root) 
                                                                (10)
                                                              /    \
                                                            (5)    (15)
                                                            / \    /  \ 
                                                        (25) (20) (35) (30)

                                                        Traveral Path: 
                                                          1. Go to the left subtree;
                                                          2. apply logic = 25, 20, 5, 35, 30, 15, 10.
